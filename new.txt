Steps to start this project will be 

1 - Creating the folders 
    - create two folder Backend and frontend 
    - For starting a project the project should start with Backend folder 
    - create a file called server.js
    - install packages in this folder for this follow this commands 
                    "cd Backend"  ( this will take you to that folder)
                    "npm init -y" (to install packages related to node)
                    "npm install express" (To install express for routing as in to get requests from the frontend)
    - Start writing the code in server.js
    - Now the server file has the code to get the server code and the listening of the server 
    - do install nodemon to run the file on the browser to install write on the terminal 
                    "npm install -g nodemon"  (to install the nodemon)
                    "nodemon server.js"  ( to run the file ) , you can also do "npm start"
    - You will every time you change something the server detects and gives a message "Restarting the server due to changes" and " App crashed " which means 
      there is and error in the file
    -create a file called .env write the port no in it also install the env by "npm install dotenv"
    -For testing the requests we need to use the "POSTMAN" available on the desktop
    -The postman allows to simulate our requests in other words we need to check whether our requests are being sent and working properly or not 


2 - Calling different API endpoints such as GET POST DELETE and PATCH

   - Write the endpoints code in the workouts.js and then
   - connect it with the server.js with 4 different functions which are post ,get , delete and patch(update) 
   - Test all the functions with the postman app\
   - Check if all routing are possible or not
   - just write localhost:4000/ap/workouts and apply different functions and send see whether you are getting the result or 
   - If not check the server is already on or not as it is necessary to be on 
   - Save each function in a collection called Mern stack app provided in the left side of the postman app



3 - Now Connecting the database which is the Mongodb
   - 

    